// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.4.0 with parameter "target=ts,import_extension=.js,ts_nocheck=false"
// @generated from file buf/validate/conformance/cases/numbers.proto (package buf.validate.conformance.cases, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../validate_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file buf/validate/conformance/cases/numbers.proto.
 */
export const file_buf_validate_conformance_cases_numbers: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate]);

/**
 * @generated from message buf.validate.conformance.cases.FloatNone
 */
export type FloatNone = Message<"buf.validate.conformance.cases.FloatNone"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatNone.
 * Use `create(FloatNoneSchema)` to create a new message.
 */
export const FloatNoneSchema: GenMessage<FloatNone> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 0);

/**
 * @generated from message buf.validate.conformance.cases.FloatConst
 */
export type FloatConst = Message<"buf.validate.conformance.cases.FloatConst"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatConst.
 * Use `create(FloatConstSchema)` to create a new message.
 */
export const FloatConstSchema: GenMessage<FloatConst> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 1);

/**
 * @generated from message buf.validate.conformance.cases.FloatIn
 */
export type FloatIn = Message<"buf.validate.conformance.cases.FloatIn"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatIn.
 * Use `create(FloatInSchema)` to create a new message.
 */
export const FloatInSchema: GenMessage<FloatIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 2);

/**
 * @generated from message buf.validate.conformance.cases.FloatNotIn
 */
export type FloatNotIn = Message<"buf.validate.conformance.cases.FloatNotIn"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatNotIn.
 * Use `create(FloatNotInSchema)` to create a new message.
 */
export const FloatNotInSchema: GenMessage<FloatNotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 3);

/**
 * @generated from message buf.validate.conformance.cases.FloatLT
 */
export type FloatLT = Message<"buf.validate.conformance.cases.FloatLT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatLT.
 * Use `create(FloatLTSchema)` to create a new message.
 */
export const FloatLTSchema: GenMessage<FloatLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 4);

/**
 * @generated from message buf.validate.conformance.cases.FloatLTE
 */
export type FloatLTE = Message<"buf.validate.conformance.cases.FloatLTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatLTE.
 * Use `create(FloatLTESchema)` to create a new message.
 */
export const FloatLTESchema: GenMessage<FloatLTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 5);

/**
 * @generated from message buf.validate.conformance.cases.FloatGT
 */
export type FloatGT = Message<"buf.validate.conformance.cases.FloatGT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatGT.
 * Use `create(FloatGTSchema)` to create a new message.
 */
export const FloatGTSchema: GenMessage<FloatGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 6);

/**
 * @generated from message buf.validate.conformance.cases.FloatGTE
 */
export type FloatGTE = Message<"buf.validate.conformance.cases.FloatGTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatGTE.
 * Use `create(FloatGTESchema)` to create a new message.
 */
export const FloatGTESchema: GenMessage<FloatGTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 7);

/**
 * @generated from message buf.validate.conformance.cases.FloatGTLT
 */
export type FloatGTLT = Message<"buf.validate.conformance.cases.FloatGTLT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatGTLT.
 * Use `create(FloatGTLTSchema)` to create a new message.
 */
export const FloatGTLTSchema: GenMessage<FloatGTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 8);

/**
 * @generated from message buf.validate.conformance.cases.FloatExLTGT
 */
export type FloatExLTGT = Message<"buf.validate.conformance.cases.FloatExLTGT"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatExLTGT.
 * Use `create(FloatExLTGTSchema)` to create a new message.
 */
export const FloatExLTGTSchema: GenMessage<FloatExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 9);

/**
 * @generated from message buf.validate.conformance.cases.FloatGTELTE
 */
export type FloatGTELTE = Message<"buf.validate.conformance.cases.FloatGTELTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatGTELTE.
 * Use `create(FloatGTELTESchema)` to create a new message.
 */
export const FloatGTELTESchema: GenMessage<FloatGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 10);

/**
 * @generated from message buf.validate.conformance.cases.FloatExGTELTE
 */
export type FloatExGTELTE = Message<"buf.validate.conformance.cases.FloatExGTELTE"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatExGTELTE.
 * Use `create(FloatExGTELTESchema)` to create a new message.
 */
export const FloatExGTELTESchema: GenMessage<FloatExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 11);

/**
 * @generated from message buf.validate.conformance.cases.FloatFinite
 */
export type FloatFinite = Message<"buf.validate.conformance.cases.FloatFinite"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatFinite.
 * Use `create(FloatFiniteSchema)` to create a new message.
 */
export const FloatFiniteSchema: GenMessage<FloatFinite> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 12);

/**
 * @generated from message buf.validate.conformance.cases.FloatNotFinite
 */
export type FloatNotFinite = Message<"buf.validate.conformance.cases.FloatNotFinite"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatNotFinite.
 * Use `create(FloatNotFiniteSchema)` to create a new message.
 */
export const FloatNotFiniteSchema: GenMessage<FloatNotFinite> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 13);

/**
 * @generated from message buf.validate.conformance.cases.FloatIgnore
 */
export type FloatIgnore = Message<"buf.validate.conformance.cases.FloatIgnore"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatIgnore.
 * Use `create(FloatIgnoreSchema)` to create a new message.
 */
export const FloatIgnoreSchema: GenMessage<FloatIgnore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 14);

/**
 * @generated from message buf.validate.conformance.cases.FloatIncorrectType
 */
export type FloatIncorrectType = Message<"buf.validate.conformance.cases.FloatIncorrectType"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatIncorrectType.
 * Use `create(FloatIncorrectTypeSchema)` to create a new message.
 */
export const FloatIncorrectTypeSchema: GenMessage<FloatIncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 15);

/**
 * @generated from message buf.validate.conformance.cases.FloatExample
 */
export type FloatExample = Message<"buf.validate.conformance.cases.FloatExample"> & {
  /**
   * @generated from field: float val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.FloatExample.
 * Use `create(FloatExampleSchema)` to create a new message.
 */
export const FloatExampleSchema: GenMessage<FloatExample> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 16);

/**
 * @generated from message buf.validate.conformance.cases.DoubleNone
 */
export type DoubleNone = Message<"buf.validate.conformance.cases.DoubleNone"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleNone.
 * Use `create(DoubleNoneSchema)` to create a new message.
 */
export const DoubleNoneSchema: GenMessage<DoubleNone> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 17);

/**
 * @generated from message buf.validate.conformance.cases.DoubleConst
 */
export type DoubleConst = Message<"buf.validate.conformance.cases.DoubleConst"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleConst.
 * Use `create(DoubleConstSchema)` to create a new message.
 */
export const DoubleConstSchema: GenMessage<DoubleConst> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 18);

/**
 * @generated from message buf.validate.conformance.cases.DoubleIn
 */
export type DoubleIn = Message<"buf.validate.conformance.cases.DoubleIn"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleIn.
 * Use `create(DoubleInSchema)` to create a new message.
 */
export const DoubleInSchema: GenMessage<DoubleIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 19);

/**
 * @generated from message buf.validate.conformance.cases.DoubleNotIn
 */
export type DoubleNotIn = Message<"buf.validate.conformance.cases.DoubleNotIn"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleNotIn.
 * Use `create(DoubleNotInSchema)` to create a new message.
 */
export const DoubleNotInSchema: GenMessage<DoubleNotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 20);

/**
 * @generated from message buf.validate.conformance.cases.DoubleLT
 */
export type DoubleLT = Message<"buf.validate.conformance.cases.DoubleLT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleLT.
 * Use `create(DoubleLTSchema)` to create a new message.
 */
export const DoubleLTSchema: GenMessage<DoubleLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 21);

/**
 * @generated from message buf.validate.conformance.cases.DoubleLTE
 */
export type DoubleLTE = Message<"buf.validate.conformance.cases.DoubleLTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleLTE.
 * Use `create(DoubleLTESchema)` to create a new message.
 */
export const DoubleLTESchema: GenMessage<DoubleLTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 22);

/**
 * @generated from message buf.validate.conformance.cases.DoubleGT
 */
export type DoubleGT = Message<"buf.validate.conformance.cases.DoubleGT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleGT.
 * Use `create(DoubleGTSchema)` to create a new message.
 */
export const DoubleGTSchema: GenMessage<DoubleGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 23);

/**
 * @generated from message buf.validate.conformance.cases.DoubleGTE
 */
export type DoubleGTE = Message<"buf.validate.conformance.cases.DoubleGTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleGTE.
 * Use `create(DoubleGTESchema)` to create a new message.
 */
export const DoubleGTESchema: GenMessage<DoubleGTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 24);

/**
 * @generated from message buf.validate.conformance.cases.DoubleGTLT
 */
export type DoubleGTLT = Message<"buf.validate.conformance.cases.DoubleGTLT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleGTLT.
 * Use `create(DoubleGTLTSchema)` to create a new message.
 */
export const DoubleGTLTSchema: GenMessage<DoubleGTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 25);

/**
 * @generated from message buf.validate.conformance.cases.DoubleExLTGT
 */
export type DoubleExLTGT = Message<"buf.validate.conformance.cases.DoubleExLTGT"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleExLTGT.
 * Use `create(DoubleExLTGTSchema)` to create a new message.
 */
export const DoubleExLTGTSchema: GenMessage<DoubleExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 26);

/**
 * @generated from message buf.validate.conformance.cases.DoubleGTELTE
 */
export type DoubleGTELTE = Message<"buf.validate.conformance.cases.DoubleGTELTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleGTELTE.
 * Use `create(DoubleGTELTESchema)` to create a new message.
 */
export const DoubleGTELTESchema: GenMessage<DoubleGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 27);

/**
 * @generated from message buf.validate.conformance.cases.DoubleExGTELTE
 */
export type DoubleExGTELTE = Message<"buf.validate.conformance.cases.DoubleExGTELTE"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleExGTELTE.
 * Use `create(DoubleExGTELTESchema)` to create a new message.
 */
export const DoubleExGTELTESchema: GenMessage<DoubleExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 28);

/**
 * @generated from message buf.validate.conformance.cases.DoubleFinite
 */
export type DoubleFinite = Message<"buf.validate.conformance.cases.DoubleFinite"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleFinite.
 * Use `create(DoubleFiniteSchema)` to create a new message.
 */
export const DoubleFiniteSchema: GenMessage<DoubleFinite> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 29);

/**
 * @generated from message buf.validate.conformance.cases.DoubleNotFinite
 */
export type DoubleNotFinite = Message<"buf.validate.conformance.cases.DoubleNotFinite"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleNotFinite.
 * Use `create(DoubleNotFiniteSchema)` to create a new message.
 */
export const DoubleNotFiniteSchema: GenMessage<DoubleNotFinite> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 30);

/**
 * @generated from message buf.validate.conformance.cases.DoubleIgnore
 */
export type DoubleIgnore = Message<"buf.validate.conformance.cases.DoubleIgnore"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleIgnore.
 * Use `create(DoubleIgnoreSchema)` to create a new message.
 */
export const DoubleIgnoreSchema: GenMessage<DoubleIgnore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 31);

/**
 * @generated from message buf.validate.conformance.cases.DoubleIncorrectType
 */
export type DoubleIncorrectType = Message<"buf.validate.conformance.cases.DoubleIncorrectType"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleIncorrectType.
 * Use `create(DoubleIncorrectTypeSchema)` to create a new message.
 */
export const DoubleIncorrectTypeSchema: GenMessage<DoubleIncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 32);

/**
 * @generated from message buf.validate.conformance.cases.DoubleExample
 */
export type DoubleExample = Message<"buf.validate.conformance.cases.DoubleExample"> & {
  /**
   * @generated from field: double val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.DoubleExample.
 * Use `create(DoubleExampleSchema)` to create a new message.
 */
export const DoubleExampleSchema: GenMessage<DoubleExample> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 33);

/**
 * @generated from message buf.validate.conformance.cases.Int32None
 */
export type Int32None = Message<"buf.validate.conformance.cases.Int32None"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32None.
 * Use `create(Int32NoneSchema)` to create a new message.
 */
export const Int32NoneSchema: GenMessage<Int32None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 34);

/**
 * @generated from message buf.validate.conformance.cases.Int32Const
 */
export type Int32Const = Message<"buf.validate.conformance.cases.Int32Const"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32Const.
 * Use `create(Int32ConstSchema)` to create a new message.
 */
export const Int32ConstSchema: GenMessage<Int32Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 35);

/**
 * @generated from message buf.validate.conformance.cases.Int32In
 */
export type Int32In = Message<"buf.validate.conformance.cases.Int32In"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32In.
 * Use `create(Int32InSchema)` to create a new message.
 */
export const Int32InSchema: GenMessage<Int32In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 36);

/**
 * @generated from message buf.validate.conformance.cases.Int32NotIn
 */
export type Int32NotIn = Message<"buf.validate.conformance.cases.Int32NotIn"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32NotIn.
 * Use `create(Int32NotInSchema)` to create a new message.
 */
export const Int32NotInSchema: GenMessage<Int32NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 37);

/**
 * @generated from message buf.validate.conformance.cases.Int32LT
 */
export type Int32LT = Message<"buf.validate.conformance.cases.Int32LT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32LT.
 * Use `create(Int32LTSchema)` to create a new message.
 */
export const Int32LTSchema: GenMessage<Int32LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 38);

/**
 * @generated from message buf.validate.conformance.cases.Int32LTE
 */
export type Int32LTE = Message<"buf.validate.conformance.cases.Int32LTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32LTE.
 * Use `create(Int32LTESchema)` to create a new message.
 */
export const Int32LTESchema: GenMessage<Int32LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 39);

/**
 * @generated from message buf.validate.conformance.cases.Int32GT
 */
export type Int32GT = Message<"buf.validate.conformance.cases.Int32GT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32GT.
 * Use `create(Int32GTSchema)` to create a new message.
 */
export const Int32GTSchema: GenMessage<Int32GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 40);

/**
 * @generated from message buf.validate.conformance.cases.Int32GTE
 */
export type Int32GTE = Message<"buf.validate.conformance.cases.Int32GTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32GTE.
 * Use `create(Int32GTESchema)` to create a new message.
 */
export const Int32GTESchema: GenMessage<Int32GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 41);

/**
 * @generated from message buf.validate.conformance.cases.Int32GTLT
 */
export type Int32GTLT = Message<"buf.validate.conformance.cases.Int32GTLT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32GTLT.
 * Use `create(Int32GTLTSchema)` to create a new message.
 */
export const Int32GTLTSchema: GenMessage<Int32GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 42);

/**
 * @generated from message buf.validate.conformance.cases.Int32ExLTGT
 */
export type Int32ExLTGT = Message<"buf.validate.conformance.cases.Int32ExLTGT"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32ExLTGT.
 * Use `create(Int32ExLTGTSchema)` to create a new message.
 */
export const Int32ExLTGTSchema: GenMessage<Int32ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 43);

/**
 * @generated from message buf.validate.conformance.cases.Int32GTELTE
 */
export type Int32GTELTE = Message<"buf.validate.conformance.cases.Int32GTELTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32GTELTE.
 * Use `create(Int32GTELTESchema)` to create a new message.
 */
export const Int32GTELTESchema: GenMessage<Int32GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 44);

/**
 * @generated from message buf.validate.conformance.cases.Int32ExGTELTE
 */
export type Int32ExGTELTE = Message<"buf.validate.conformance.cases.Int32ExGTELTE"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32ExGTELTE.
 * Use `create(Int32ExGTELTESchema)` to create a new message.
 */
export const Int32ExGTELTESchema: GenMessage<Int32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 45);

/**
 * @generated from message buf.validate.conformance.cases.Int32Ignore
 */
export type Int32Ignore = Message<"buf.validate.conformance.cases.Int32Ignore"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32Ignore.
 * Use `create(Int32IgnoreSchema)` to create a new message.
 */
export const Int32IgnoreSchema: GenMessage<Int32Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 46);

/**
 * @generated from message buf.validate.conformance.cases.Int32IncorrectType
 */
export type Int32IncorrectType = Message<"buf.validate.conformance.cases.Int32IncorrectType"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32IncorrectType.
 * Use `create(Int32IncorrectTypeSchema)` to create a new message.
 */
export const Int32IncorrectTypeSchema: GenMessage<Int32IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 47);

/**
 * @generated from message buf.validate.conformance.cases.Int32Example
 */
export type Int32Example = Message<"buf.validate.conformance.cases.Int32Example"> & {
  /**
   * @generated from field: int32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Int32Example.
 * Use `create(Int32ExampleSchema)` to create a new message.
 */
export const Int32ExampleSchema: GenMessage<Int32Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 48);

/**
 * @generated from message buf.validate.conformance.cases.Int64None
 */
export type Int64None = Message<"buf.validate.conformance.cases.Int64None"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64None.
 * Use `create(Int64NoneSchema)` to create a new message.
 */
export const Int64NoneSchema: GenMessage<Int64None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 49);

/**
 * @generated from message buf.validate.conformance.cases.Int64Const
 */
export type Int64Const = Message<"buf.validate.conformance.cases.Int64Const"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64Const.
 * Use `create(Int64ConstSchema)` to create a new message.
 */
export const Int64ConstSchema: GenMessage<Int64Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 50);

/**
 * @generated from message buf.validate.conformance.cases.Int64In
 */
export type Int64In = Message<"buf.validate.conformance.cases.Int64In"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64In.
 * Use `create(Int64InSchema)` to create a new message.
 */
export const Int64InSchema: GenMessage<Int64In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 51);

/**
 * @generated from message buf.validate.conformance.cases.Int64NotIn
 */
export type Int64NotIn = Message<"buf.validate.conformance.cases.Int64NotIn"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64NotIn.
 * Use `create(Int64NotInSchema)` to create a new message.
 */
export const Int64NotInSchema: GenMessage<Int64NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 52);

/**
 * @generated from message buf.validate.conformance.cases.Int64LT
 */
export type Int64LT = Message<"buf.validate.conformance.cases.Int64LT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64LT.
 * Use `create(Int64LTSchema)` to create a new message.
 */
export const Int64LTSchema: GenMessage<Int64LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 53);

/**
 * @generated from message buf.validate.conformance.cases.Int64LTE
 */
export type Int64LTE = Message<"buf.validate.conformance.cases.Int64LTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64LTE.
 * Use `create(Int64LTESchema)` to create a new message.
 */
export const Int64LTESchema: GenMessage<Int64LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 54);

/**
 * @generated from message buf.validate.conformance.cases.Int64GT
 */
export type Int64GT = Message<"buf.validate.conformance.cases.Int64GT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64GT.
 * Use `create(Int64GTSchema)` to create a new message.
 */
export const Int64GTSchema: GenMessage<Int64GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 55);

/**
 * @generated from message buf.validate.conformance.cases.Int64GTE
 */
export type Int64GTE = Message<"buf.validate.conformance.cases.Int64GTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64GTE.
 * Use `create(Int64GTESchema)` to create a new message.
 */
export const Int64GTESchema: GenMessage<Int64GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 56);

/**
 * @generated from message buf.validate.conformance.cases.Int64GTLT
 */
export type Int64GTLT = Message<"buf.validate.conformance.cases.Int64GTLT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64GTLT.
 * Use `create(Int64GTLTSchema)` to create a new message.
 */
export const Int64GTLTSchema: GenMessage<Int64GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 57);

/**
 * @generated from message buf.validate.conformance.cases.Int64ExLTGT
 */
export type Int64ExLTGT = Message<"buf.validate.conformance.cases.Int64ExLTGT"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64ExLTGT.
 * Use `create(Int64ExLTGTSchema)` to create a new message.
 */
export const Int64ExLTGTSchema: GenMessage<Int64ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 58);

/**
 * @generated from message buf.validate.conformance.cases.Int64GTELTE
 */
export type Int64GTELTE = Message<"buf.validate.conformance.cases.Int64GTELTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64GTELTE.
 * Use `create(Int64GTELTESchema)` to create a new message.
 */
export const Int64GTELTESchema: GenMessage<Int64GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 59);

/**
 * @generated from message buf.validate.conformance.cases.Int64ExGTELTE
 */
export type Int64ExGTELTE = Message<"buf.validate.conformance.cases.Int64ExGTELTE"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64ExGTELTE.
 * Use `create(Int64ExGTELTESchema)` to create a new message.
 */
export const Int64ExGTELTESchema: GenMessage<Int64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 60);

/**
 * @generated from message buf.validate.conformance.cases.Int64Ignore
 */
export type Int64Ignore = Message<"buf.validate.conformance.cases.Int64Ignore"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64Ignore.
 * Use `create(Int64IgnoreSchema)` to create a new message.
 */
export const Int64IgnoreSchema: GenMessage<Int64Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 61);

/**
 * @generated from message buf.validate.conformance.cases.Int64BigRules
 */
export type Int64BigRules = Message<"buf.validate.conformance.cases.Int64BigRules"> & {
  /**
   * Intentionally choose limits that are outside the range of both signed and unsigned 32-bit integers.
   *
   * @generated from field: int64 lt_pos = 1;
   */
  ltPos: bigint;

  /**
   * @generated from field: int64 lt_neg = 2;
   */
  ltNeg: bigint;

  /**
   * @generated from field: int64 gt_pos = 3;
   */
  gtPos: bigint;

  /**
   * @generated from field: int64 gt_neg = 4;
   */
  gtNeg: bigint;

  /**
   * @generated from field: int64 lte_pos = 5;
   */
  ltePos: bigint;

  /**
   * @generated from field: int64 lte_neg = 6;
   */
  lteNeg: bigint;

  /**
   * @generated from field: int64 gte_pos = 7;
   */
  gtePos: bigint;

  /**
   * @generated from field: int64 gte_neg = 8;
   */
  gteNeg: bigint;

  /**
   * @generated from field: int64 constant_pos = 9;
   */
  constantPos: bigint;

  /**
   * @generated from field: int64 constant_neg = 10;
   */
  constantNeg: bigint;

  /**
   * @generated from field: int64 in = 11;
   */
  in: bigint;

  /**
   * @generated from field: int64 notin = 12;
   */
  notin: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64BigRules.
 * Use `create(Int64BigRulesSchema)` to create a new message.
 */
export const Int64BigRulesSchema: GenMessage<Int64BigRules> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 62);

/**
 * @generated from message buf.validate.conformance.cases.Int64IncorrectType
 */
export type Int64IncorrectType = Message<"buf.validate.conformance.cases.Int64IncorrectType"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64IncorrectType.
 * Use `create(Int64IncorrectTypeSchema)` to create a new message.
 */
export const Int64IncorrectTypeSchema: GenMessage<Int64IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 63);

/**
 * @generated from message buf.validate.conformance.cases.Int64Example
 */
export type Int64Example = Message<"buf.validate.conformance.cases.Int64Example"> & {
  /**
   * @generated from field: int64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64Example.
 * Use `create(Int64ExampleSchema)` to create a new message.
 */
export const Int64ExampleSchema: GenMessage<Int64Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 64);

/**
 * @generated from message buf.validate.conformance.cases.UInt32None
 */
export type UInt32None = Message<"buf.validate.conformance.cases.UInt32None"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32None.
 * Use `create(UInt32NoneSchema)` to create a new message.
 */
export const UInt32NoneSchema: GenMessage<UInt32None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 65);

/**
 * @generated from message buf.validate.conformance.cases.UInt32Const
 */
export type UInt32Const = Message<"buf.validate.conformance.cases.UInt32Const"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32Const.
 * Use `create(UInt32ConstSchema)` to create a new message.
 */
export const UInt32ConstSchema: GenMessage<UInt32Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 66);

/**
 * @generated from message buf.validate.conformance.cases.UInt32In
 */
export type UInt32In = Message<"buf.validate.conformance.cases.UInt32In"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32In.
 * Use `create(UInt32InSchema)` to create a new message.
 */
export const UInt32InSchema: GenMessage<UInt32In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 67);

/**
 * @generated from message buf.validate.conformance.cases.UInt32NotIn
 */
export type UInt32NotIn = Message<"buf.validate.conformance.cases.UInt32NotIn"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32NotIn.
 * Use `create(UInt32NotInSchema)` to create a new message.
 */
export const UInt32NotInSchema: GenMessage<UInt32NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 68);

/**
 * @generated from message buf.validate.conformance.cases.UInt32LT
 */
export type UInt32LT = Message<"buf.validate.conformance.cases.UInt32LT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32LT.
 * Use `create(UInt32LTSchema)` to create a new message.
 */
export const UInt32LTSchema: GenMessage<UInt32LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 69);

/**
 * @generated from message buf.validate.conformance.cases.UInt32LTE
 */
export type UInt32LTE = Message<"buf.validate.conformance.cases.UInt32LTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32LTE.
 * Use `create(UInt32LTESchema)` to create a new message.
 */
export const UInt32LTESchema: GenMessage<UInt32LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 70);

/**
 * @generated from message buf.validate.conformance.cases.UInt32GT
 */
export type UInt32GT = Message<"buf.validate.conformance.cases.UInt32GT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32GT.
 * Use `create(UInt32GTSchema)` to create a new message.
 */
export const UInt32GTSchema: GenMessage<UInt32GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 71);

/**
 * @generated from message buf.validate.conformance.cases.UInt32GTE
 */
export type UInt32GTE = Message<"buf.validate.conformance.cases.UInt32GTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32GTE.
 * Use `create(UInt32GTESchema)` to create a new message.
 */
export const UInt32GTESchema: GenMessage<UInt32GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 72);

/**
 * @generated from message buf.validate.conformance.cases.UInt32GTLT
 */
export type UInt32GTLT = Message<"buf.validate.conformance.cases.UInt32GTLT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32GTLT.
 * Use `create(UInt32GTLTSchema)` to create a new message.
 */
export const UInt32GTLTSchema: GenMessage<UInt32GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 73);

/**
 * @generated from message buf.validate.conformance.cases.UInt32ExLTGT
 */
export type UInt32ExLTGT = Message<"buf.validate.conformance.cases.UInt32ExLTGT"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32ExLTGT.
 * Use `create(UInt32ExLTGTSchema)` to create a new message.
 */
export const UInt32ExLTGTSchema: GenMessage<UInt32ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 74);

/**
 * @generated from message buf.validate.conformance.cases.UInt32GTELTE
 */
export type UInt32GTELTE = Message<"buf.validate.conformance.cases.UInt32GTELTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32GTELTE.
 * Use `create(UInt32GTELTESchema)` to create a new message.
 */
export const UInt32GTELTESchema: GenMessage<UInt32GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 75);

/**
 * @generated from message buf.validate.conformance.cases.UInt32ExGTELTE
 */
export type UInt32ExGTELTE = Message<"buf.validate.conformance.cases.UInt32ExGTELTE"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32ExGTELTE.
 * Use `create(UInt32ExGTELTESchema)` to create a new message.
 */
export const UInt32ExGTELTESchema: GenMessage<UInt32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 76);

/**
 * @generated from message buf.validate.conformance.cases.UInt32Ignore
 */
export type UInt32Ignore = Message<"buf.validate.conformance.cases.UInt32Ignore"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32Ignore.
 * Use `create(UInt32IgnoreSchema)` to create a new message.
 */
export const UInt32IgnoreSchema: GenMessage<UInt32Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 77);

/**
 * @generated from message buf.validate.conformance.cases.UInt32IncorrectType
 */
export type UInt32IncorrectType = Message<"buf.validate.conformance.cases.UInt32IncorrectType"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32IncorrectType.
 * Use `create(UInt32IncorrectTypeSchema)` to create a new message.
 */
export const UInt32IncorrectTypeSchema: GenMessage<UInt32IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 78);

/**
 * @generated from message buf.validate.conformance.cases.UInt32Example
 */
export type UInt32Example = Message<"buf.validate.conformance.cases.UInt32Example"> & {
  /**
   * @generated from field: uint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt32Example.
 * Use `create(UInt32ExampleSchema)` to create a new message.
 */
export const UInt32ExampleSchema: GenMessage<UInt32Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 79);

/**
 * @generated from message buf.validate.conformance.cases.UInt64None
 */
export type UInt64None = Message<"buf.validate.conformance.cases.UInt64None"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64None.
 * Use `create(UInt64NoneSchema)` to create a new message.
 */
export const UInt64NoneSchema: GenMessage<UInt64None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 80);

/**
 * @generated from message buf.validate.conformance.cases.UInt64Const
 */
export type UInt64Const = Message<"buf.validate.conformance.cases.UInt64Const"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64Const.
 * Use `create(UInt64ConstSchema)` to create a new message.
 */
export const UInt64ConstSchema: GenMessage<UInt64Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 81);

/**
 * @generated from message buf.validate.conformance.cases.UInt64In
 */
export type UInt64In = Message<"buf.validate.conformance.cases.UInt64In"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64In.
 * Use `create(UInt64InSchema)` to create a new message.
 */
export const UInt64InSchema: GenMessage<UInt64In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 82);

/**
 * @generated from message buf.validate.conformance.cases.UInt64NotIn
 */
export type UInt64NotIn = Message<"buf.validate.conformance.cases.UInt64NotIn"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64NotIn.
 * Use `create(UInt64NotInSchema)` to create a new message.
 */
export const UInt64NotInSchema: GenMessage<UInt64NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 83);

/**
 * @generated from message buf.validate.conformance.cases.UInt64LT
 */
export type UInt64LT = Message<"buf.validate.conformance.cases.UInt64LT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64LT.
 * Use `create(UInt64LTSchema)` to create a new message.
 */
export const UInt64LTSchema: GenMessage<UInt64LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 84);

/**
 * @generated from message buf.validate.conformance.cases.UInt64LTE
 */
export type UInt64LTE = Message<"buf.validate.conformance.cases.UInt64LTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64LTE.
 * Use `create(UInt64LTESchema)` to create a new message.
 */
export const UInt64LTESchema: GenMessage<UInt64LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 85);

/**
 * @generated from message buf.validate.conformance.cases.UInt64GT
 */
export type UInt64GT = Message<"buf.validate.conformance.cases.UInt64GT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64GT.
 * Use `create(UInt64GTSchema)` to create a new message.
 */
export const UInt64GTSchema: GenMessage<UInt64GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 86);

/**
 * @generated from message buf.validate.conformance.cases.UInt64GTE
 */
export type UInt64GTE = Message<"buf.validate.conformance.cases.UInt64GTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64GTE.
 * Use `create(UInt64GTESchema)` to create a new message.
 */
export const UInt64GTESchema: GenMessage<UInt64GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 87);

/**
 * @generated from message buf.validate.conformance.cases.UInt64GTLT
 */
export type UInt64GTLT = Message<"buf.validate.conformance.cases.UInt64GTLT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64GTLT.
 * Use `create(UInt64GTLTSchema)` to create a new message.
 */
export const UInt64GTLTSchema: GenMessage<UInt64GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 88);

/**
 * @generated from message buf.validate.conformance.cases.UInt64ExLTGT
 */
export type UInt64ExLTGT = Message<"buf.validate.conformance.cases.UInt64ExLTGT"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64ExLTGT.
 * Use `create(UInt64ExLTGTSchema)` to create a new message.
 */
export const UInt64ExLTGTSchema: GenMessage<UInt64ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 89);

/**
 * @generated from message buf.validate.conformance.cases.UInt64GTELTE
 */
export type UInt64GTELTE = Message<"buf.validate.conformance.cases.UInt64GTELTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64GTELTE.
 * Use `create(UInt64GTELTESchema)` to create a new message.
 */
export const UInt64GTELTESchema: GenMessage<UInt64GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 90);

/**
 * @generated from message buf.validate.conformance.cases.UInt64ExGTELTE
 */
export type UInt64ExGTELTE = Message<"buf.validate.conformance.cases.UInt64ExGTELTE"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64ExGTELTE.
 * Use `create(UInt64ExGTELTESchema)` to create a new message.
 */
export const UInt64ExGTELTESchema: GenMessage<UInt64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 91);

/**
 * @generated from message buf.validate.conformance.cases.UInt64Ignore
 */
export type UInt64Ignore = Message<"buf.validate.conformance.cases.UInt64Ignore"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64Ignore.
 * Use `create(UInt64IgnoreSchema)` to create a new message.
 */
export const UInt64IgnoreSchema: GenMessage<UInt64Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 92);

/**
 * @generated from message buf.validate.conformance.cases.UInt64IncorrectType
 */
export type UInt64IncorrectType = Message<"buf.validate.conformance.cases.UInt64IncorrectType"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64IncorrectType.
 * Use `create(UInt64IncorrectTypeSchema)` to create a new message.
 */
export const UInt64IncorrectTypeSchema: GenMessage<UInt64IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 93);

/**
 * @generated from message buf.validate.conformance.cases.UInt64Example
 */
export type UInt64Example = Message<"buf.validate.conformance.cases.UInt64Example"> & {
  /**
   * @generated from field: uint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.UInt64Example.
 * Use `create(UInt64ExampleSchema)` to create a new message.
 */
export const UInt64ExampleSchema: GenMessage<UInt64Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 94);

/**
 * @generated from message buf.validate.conformance.cases.SInt32None
 */
export type SInt32None = Message<"buf.validate.conformance.cases.SInt32None"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32None.
 * Use `create(SInt32NoneSchema)` to create a new message.
 */
export const SInt32NoneSchema: GenMessage<SInt32None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 95);

/**
 * @generated from message buf.validate.conformance.cases.SInt32Const
 */
export type SInt32Const = Message<"buf.validate.conformance.cases.SInt32Const"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32Const.
 * Use `create(SInt32ConstSchema)` to create a new message.
 */
export const SInt32ConstSchema: GenMessage<SInt32Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 96);

/**
 * @generated from message buf.validate.conformance.cases.SInt32In
 */
export type SInt32In = Message<"buf.validate.conformance.cases.SInt32In"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32In.
 * Use `create(SInt32InSchema)` to create a new message.
 */
export const SInt32InSchema: GenMessage<SInt32In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 97);

/**
 * @generated from message buf.validate.conformance.cases.SInt32NotIn
 */
export type SInt32NotIn = Message<"buf.validate.conformance.cases.SInt32NotIn"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32NotIn.
 * Use `create(SInt32NotInSchema)` to create a new message.
 */
export const SInt32NotInSchema: GenMessage<SInt32NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 98);

/**
 * @generated from message buf.validate.conformance.cases.SInt32LT
 */
export type SInt32LT = Message<"buf.validate.conformance.cases.SInt32LT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32LT.
 * Use `create(SInt32LTSchema)` to create a new message.
 */
export const SInt32LTSchema: GenMessage<SInt32LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 99);

/**
 * @generated from message buf.validate.conformance.cases.SInt32LTE
 */
export type SInt32LTE = Message<"buf.validate.conformance.cases.SInt32LTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32LTE.
 * Use `create(SInt32LTESchema)` to create a new message.
 */
export const SInt32LTESchema: GenMessage<SInt32LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 100);

/**
 * @generated from message buf.validate.conformance.cases.SInt32GT
 */
export type SInt32GT = Message<"buf.validate.conformance.cases.SInt32GT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32GT.
 * Use `create(SInt32GTSchema)` to create a new message.
 */
export const SInt32GTSchema: GenMessage<SInt32GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 101);

/**
 * @generated from message buf.validate.conformance.cases.SInt32GTE
 */
export type SInt32GTE = Message<"buf.validate.conformance.cases.SInt32GTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32GTE.
 * Use `create(SInt32GTESchema)` to create a new message.
 */
export const SInt32GTESchema: GenMessage<SInt32GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 102);

/**
 * @generated from message buf.validate.conformance.cases.SInt32GTLT
 */
export type SInt32GTLT = Message<"buf.validate.conformance.cases.SInt32GTLT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32GTLT.
 * Use `create(SInt32GTLTSchema)` to create a new message.
 */
export const SInt32GTLTSchema: GenMessage<SInt32GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 103);

/**
 * @generated from message buf.validate.conformance.cases.SInt32ExLTGT
 */
export type SInt32ExLTGT = Message<"buf.validate.conformance.cases.SInt32ExLTGT"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32ExLTGT.
 * Use `create(SInt32ExLTGTSchema)` to create a new message.
 */
export const SInt32ExLTGTSchema: GenMessage<SInt32ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 104);

/**
 * @generated from message buf.validate.conformance.cases.SInt32GTELTE
 */
export type SInt32GTELTE = Message<"buf.validate.conformance.cases.SInt32GTELTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32GTELTE.
 * Use `create(SInt32GTELTESchema)` to create a new message.
 */
export const SInt32GTELTESchema: GenMessage<SInt32GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 105);

/**
 * @generated from message buf.validate.conformance.cases.SInt32ExGTELTE
 */
export type SInt32ExGTELTE = Message<"buf.validate.conformance.cases.SInt32ExGTELTE"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32ExGTELTE.
 * Use `create(SInt32ExGTELTESchema)` to create a new message.
 */
export const SInt32ExGTELTESchema: GenMessage<SInt32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 106);

/**
 * @generated from message buf.validate.conformance.cases.SInt32Ignore
 */
export type SInt32Ignore = Message<"buf.validate.conformance.cases.SInt32Ignore"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32Ignore.
 * Use `create(SInt32IgnoreSchema)` to create a new message.
 */
export const SInt32IgnoreSchema: GenMessage<SInt32Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 107);

/**
 * @generated from message buf.validate.conformance.cases.SInt32IncorrectType
 */
export type SInt32IncorrectType = Message<"buf.validate.conformance.cases.SInt32IncorrectType"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32IncorrectType.
 * Use `create(SInt32IncorrectTypeSchema)` to create a new message.
 */
export const SInt32IncorrectTypeSchema: GenMessage<SInt32IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 108);

/**
 * @generated from message buf.validate.conformance.cases.SInt32Example
 */
export type SInt32Example = Message<"buf.validate.conformance.cases.SInt32Example"> & {
  /**
   * @generated from field: sint32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt32Example.
 * Use `create(SInt32ExampleSchema)` to create a new message.
 */
export const SInt32ExampleSchema: GenMessage<SInt32Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 109);

/**
 * @generated from message buf.validate.conformance.cases.SInt64None
 */
export type SInt64None = Message<"buf.validate.conformance.cases.SInt64None"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64None.
 * Use `create(SInt64NoneSchema)` to create a new message.
 */
export const SInt64NoneSchema: GenMessage<SInt64None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 110);

/**
 * @generated from message buf.validate.conformance.cases.SInt64Const
 */
export type SInt64Const = Message<"buf.validate.conformance.cases.SInt64Const"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64Const.
 * Use `create(SInt64ConstSchema)` to create a new message.
 */
export const SInt64ConstSchema: GenMessage<SInt64Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 111);

/**
 * @generated from message buf.validate.conformance.cases.SInt64In
 */
export type SInt64In = Message<"buf.validate.conformance.cases.SInt64In"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64In.
 * Use `create(SInt64InSchema)` to create a new message.
 */
export const SInt64InSchema: GenMessage<SInt64In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 112);

/**
 * @generated from message buf.validate.conformance.cases.SInt64NotIn
 */
export type SInt64NotIn = Message<"buf.validate.conformance.cases.SInt64NotIn"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64NotIn.
 * Use `create(SInt64NotInSchema)` to create a new message.
 */
export const SInt64NotInSchema: GenMessage<SInt64NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 113);

/**
 * @generated from message buf.validate.conformance.cases.SInt64LT
 */
export type SInt64LT = Message<"buf.validate.conformance.cases.SInt64LT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64LT.
 * Use `create(SInt64LTSchema)` to create a new message.
 */
export const SInt64LTSchema: GenMessage<SInt64LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 114);

/**
 * @generated from message buf.validate.conformance.cases.SInt64LTE
 */
export type SInt64LTE = Message<"buf.validate.conformance.cases.SInt64LTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64LTE.
 * Use `create(SInt64LTESchema)` to create a new message.
 */
export const SInt64LTESchema: GenMessage<SInt64LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 115);

/**
 * @generated from message buf.validate.conformance.cases.SInt64GT
 */
export type SInt64GT = Message<"buf.validate.conformance.cases.SInt64GT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64GT.
 * Use `create(SInt64GTSchema)` to create a new message.
 */
export const SInt64GTSchema: GenMessage<SInt64GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 116);

/**
 * @generated from message buf.validate.conformance.cases.SInt64GTE
 */
export type SInt64GTE = Message<"buf.validate.conformance.cases.SInt64GTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64GTE.
 * Use `create(SInt64GTESchema)` to create a new message.
 */
export const SInt64GTESchema: GenMessage<SInt64GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 117);

/**
 * @generated from message buf.validate.conformance.cases.SInt64GTLT
 */
export type SInt64GTLT = Message<"buf.validate.conformance.cases.SInt64GTLT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64GTLT.
 * Use `create(SInt64GTLTSchema)` to create a new message.
 */
export const SInt64GTLTSchema: GenMessage<SInt64GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 118);

/**
 * @generated from message buf.validate.conformance.cases.SInt64ExLTGT
 */
export type SInt64ExLTGT = Message<"buf.validate.conformance.cases.SInt64ExLTGT"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64ExLTGT.
 * Use `create(SInt64ExLTGTSchema)` to create a new message.
 */
export const SInt64ExLTGTSchema: GenMessage<SInt64ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 119);

/**
 * @generated from message buf.validate.conformance.cases.SInt64GTELTE
 */
export type SInt64GTELTE = Message<"buf.validate.conformance.cases.SInt64GTELTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64GTELTE.
 * Use `create(SInt64GTELTESchema)` to create a new message.
 */
export const SInt64GTELTESchema: GenMessage<SInt64GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 120);

/**
 * @generated from message buf.validate.conformance.cases.SInt64ExGTELTE
 */
export type SInt64ExGTELTE = Message<"buf.validate.conformance.cases.SInt64ExGTELTE"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64ExGTELTE.
 * Use `create(SInt64ExGTELTESchema)` to create a new message.
 */
export const SInt64ExGTELTESchema: GenMessage<SInt64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 121);

/**
 * @generated from message buf.validate.conformance.cases.SInt64Ignore
 */
export type SInt64Ignore = Message<"buf.validate.conformance.cases.SInt64Ignore"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64Ignore.
 * Use `create(SInt64IgnoreSchema)` to create a new message.
 */
export const SInt64IgnoreSchema: GenMessage<SInt64Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 122);

/**
 * @generated from message buf.validate.conformance.cases.SInt64IncorrectType
 */
export type SInt64IncorrectType = Message<"buf.validate.conformance.cases.SInt64IncorrectType"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64IncorrectType.
 * Use `create(SInt64IncorrectTypeSchema)` to create a new message.
 */
export const SInt64IncorrectTypeSchema: GenMessage<SInt64IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 123);

/**
 * @generated from message buf.validate.conformance.cases.SInt64Example
 */
export type SInt64Example = Message<"buf.validate.conformance.cases.SInt64Example"> & {
  /**
   * @generated from field: sint64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SInt64Example.
 * Use `create(SInt64ExampleSchema)` to create a new message.
 */
export const SInt64ExampleSchema: GenMessage<SInt64Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 124);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32None
 */
export type Fixed32None = Message<"buf.validate.conformance.cases.Fixed32None"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32None.
 * Use `create(Fixed32NoneSchema)` to create a new message.
 */
export const Fixed32NoneSchema: GenMessage<Fixed32None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 125);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32Const
 */
export type Fixed32Const = Message<"buf.validate.conformance.cases.Fixed32Const"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32Const.
 * Use `create(Fixed32ConstSchema)` to create a new message.
 */
export const Fixed32ConstSchema: GenMessage<Fixed32Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 126);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32In
 */
export type Fixed32In = Message<"buf.validate.conformance.cases.Fixed32In"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32In.
 * Use `create(Fixed32InSchema)` to create a new message.
 */
export const Fixed32InSchema: GenMessage<Fixed32In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 127);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32NotIn
 */
export type Fixed32NotIn = Message<"buf.validate.conformance.cases.Fixed32NotIn"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32NotIn.
 * Use `create(Fixed32NotInSchema)` to create a new message.
 */
export const Fixed32NotInSchema: GenMessage<Fixed32NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 128);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32LT
 */
export type Fixed32LT = Message<"buf.validate.conformance.cases.Fixed32LT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32LT.
 * Use `create(Fixed32LTSchema)` to create a new message.
 */
export const Fixed32LTSchema: GenMessage<Fixed32LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 129);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32LTE
 */
export type Fixed32LTE = Message<"buf.validate.conformance.cases.Fixed32LTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32LTE.
 * Use `create(Fixed32LTESchema)` to create a new message.
 */
export const Fixed32LTESchema: GenMessage<Fixed32LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 130);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32GT
 */
export type Fixed32GT = Message<"buf.validate.conformance.cases.Fixed32GT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32GT.
 * Use `create(Fixed32GTSchema)` to create a new message.
 */
export const Fixed32GTSchema: GenMessage<Fixed32GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 131);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32GTE
 */
export type Fixed32GTE = Message<"buf.validate.conformance.cases.Fixed32GTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32GTE.
 * Use `create(Fixed32GTESchema)` to create a new message.
 */
export const Fixed32GTESchema: GenMessage<Fixed32GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 132);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32GTLT
 */
export type Fixed32GTLT = Message<"buf.validate.conformance.cases.Fixed32GTLT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32GTLT.
 * Use `create(Fixed32GTLTSchema)` to create a new message.
 */
export const Fixed32GTLTSchema: GenMessage<Fixed32GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 133);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32ExLTGT
 */
export type Fixed32ExLTGT = Message<"buf.validate.conformance.cases.Fixed32ExLTGT"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32ExLTGT.
 * Use `create(Fixed32ExLTGTSchema)` to create a new message.
 */
export const Fixed32ExLTGTSchema: GenMessage<Fixed32ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 134);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32GTELTE
 */
export type Fixed32GTELTE = Message<"buf.validate.conformance.cases.Fixed32GTELTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32GTELTE.
 * Use `create(Fixed32GTELTESchema)` to create a new message.
 */
export const Fixed32GTELTESchema: GenMessage<Fixed32GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 135);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32ExGTELTE
 */
export type Fixed32ExGTELTE = Message<"buf.validate.conformance.cases.Fixed32ExGTELTE"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32ExGTELTE.
 * Use `create(Fixed32ExGTELTESchema)` to create a new message.
 */
export const Fixed32ExGTELTESchema: GenMessage<Fixed32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 136);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32Ignore
 */
export type Fixed32Ignore = Message<"buf.validate.conformance.cases.Fixed32Ignore"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32Ignore.
 * Use `create(Fixed32IgnoreSchema)` to create a new message.
 */
export const Fixed32IgnoreSchema: GenMessage<Fixed32Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 137);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32IncorrectType
 */
export type Fixed32IncorrectType = Message<"buf.validate.conformance.cases.Fixed32IncorrectType"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32IncorrectType.
 * Use `create(Fixed32IncorrectTypeSchema)` to create a new message.
 */
export const Fixed32IncorrectTypeSchema: GenMessage<Fixed32IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 138);

/**
 * @generated from message buf.validate.conformance.cases.Fixed32Example
 */
export type Fixed32Example = Message<"buf.validate.conformance.cases.Fixed32Example"> & {
  /**
   * @generated from field: fixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed32Example.
 * Use `create(Fixed32ExampleSchema)` to create a new message.
 */
export const Fixed32ExampleSchema: GenMessage<Fixed32Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 139);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64None
 */
export type Fixed64None = Message<"buf.validate.conformance.cases.Fixed64None"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64None.
 * Use `create(Fixed64NoneSchema)` to create a new message.
 */
export const Fixed64NoneSchema: GenMessage<Fixed64None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 140);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64Const
 */
export type Fixed64Const = Message<"buf.validate.conformance.cases.Fixed64Const"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64Const.
 * Use `create(Fixed64ConstSchema)` to create a new message.
 */
export const Fixed64ConstSchema: GenMessage<Fixed64Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 141);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64In
 */
export type Fixed64In = Message<"buf.validate.conformance.cases.Fixed64In"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64In.
 * Use `create(Fixed64InSchema)` to create a new message.
 */
export const Fixed64InSchema: GenMessage<Fixed64In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 142);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64NotIn
 */
export type Fixed64NotIn = Message<"buf.validate.conformance.cases.Fixed64NotIn"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64NotIn.
 * Use `create(Fixed64NotInSchema)` to create a new message.
 */
export const Fixed64NotInSchema: GenMessage<Fixed64NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 143);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64LT
 */
export type Fixed64LT = Message<"buf.validate.conformance.cases.Fixed64LT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64LT.
 * Use `create(Fixed64LTSchema)` to create a new message.
 */
export const Fixed64LTSchema: GenMessage<Fixed64LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 144);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64LTE
 */
export type Fixed64LTE = Message<"buf.validate.conformance.cases.Fixed64LTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64LTE.
 * Use `create(Fixed64LTESchema)` to create a new message.
 */
export const Fixed64LTESchema: GenMessage<Fixed64LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 145);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64GT
 */
export type Fixed64GT = Message<"buf.validate.conformance.cases.Fixed64GT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64GT.
 * Use `create(Fixed64GTSchema)` to create a new message.
 */
export const Fixed64GTSchema: GenMessage<Fixed64GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 146);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64GTE
 */
export type Fixed64GTE = Message<"buf.validate.conformance.cases.Fixed64GTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64GTE.
 * Use `create(Fixed64GTESchema)` to create a new message.
 */
export const Fixed64GTESchema: GenMessage<Fixed64GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 147);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64GTLT
 */
export type Fixed64GTLT = Message<"buf.validate.conformance.cases.Fixed64GTLT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64GTLT.
 * Use `create(Fixed64GTLTSchema)` to create a new message.
 */
export const Fixed64GTLTSchema: GenMessage<Fixed64GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 148);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64ExLTGT
 */
export type Fixed64ExLTGT = Message<"buf.validate.conformance.cases.Fixed64ExLTGT"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64ExLTGT.
 * Use `create(Fixed64ExLTGTSchema)` to create a new message.
 */
export const Fixed64ExLTGTSchema: GenMessage<Fixed64ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 149);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64GTELTE
 */
export type Fixed64GTELTE = Message<"buf.validate.conformance.cases.Fixed64GTELTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64GTELTE.
 * Use `create(Fixed64GTELTESchema)` to create a new message.
 */
export const Fixed64GTELTESchema: GenMessage<Fixed64GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 150);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64ExGTELTE
 */
export type Fixed64ExGTELTE = Message<"buf.validate.conformance.cases.Fixed64ExGTELTE"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64ExGTELTE.
 * Use `create(Fixed64ExGTELTESchema)` to create a new message.
 */
export const Fixed64ExGTELTESchema: GenMessage<Fixed64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 151);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64Ignore
 */
export type Fixed64Ignore = Message<"buf.validate.conformance.cases.Fixed64Ignore"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64Ignore.
 * Use `create(Fixed64IgnoreSchema)` to create a new message.
 */
export const Fixed64IgnoreSchema: GenMessage<Fixed64Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 152);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64IncorrectType
 */
export type Fixed64IncorrectType = Message<"buf.validate.conformance.cases.Fixed64IncorrectType"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64IncorrectType.
 * Use `create(Fixed64IncorrectTypeSchema)` to create a new message.
 */
export const Fixed64IncorrectTypeSchema: GenMessage<Fixed64IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 153);

/**
 * @generated from message buf.validate.conformance.cases.Fixed64Example
 */
export type Fixed64Example = Message<"buf.validate.conformance.cases.Fixed64Example"> & {
  /**
   * @generated from field: fixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Fixed64Example.
 * Use `create(Fixed64ExampleSchema)` to create a new message.
 */
export const Fixed64ExampleSchema: GenMessage<Fixed64Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 154);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32None
 */
export type SFixed32None = Message<"buf.validate.conformance.cases.SFixed32None"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32None.
 * Use `create(SFixed32NoneSchema)` to create a new message.
 */
export const SFixed32NoneSchema: GenMessage<SFixed32None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 155);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32Const
 */
export type SFixed32Const = Message<"buf.validate.conformance.cases.SFixed32Const"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32Const.
 * Use `create(SFixed32ConstSchema)` to create a new message.
 */
export const SFixed32ConstSchema: GenMessage<SFixed32Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 156);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32In
 */
export type SFixed32In = Message<"buf.validate.conformance.cases.SFixed32In"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32In.
 * Use `create(SFixed32InSchema)` to create a new message.
 */
export const SFixed32InSchema: GenMessage<SFixed32In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 157);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32NotIn
 */
export type SFixed32NotIn = Message<"buf.validate.conformance.cases.SFixed32NotIn"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32NotIn.
 * Use `create(SFixed32NotInSchema)` to create a new message.
 */
export const SFixed32NotInSchema: GenMessage<SFixed32NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 158);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32LT
 */
export type SFixed32LT = Message<"buf.validate.conformance.cases.SFixed32LT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32LT.
 * Use `create(SFixed32LTSchema)` to create a new message.
 */
export const SFixed32LTSchema: GenMessage<SFixed32LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 159);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32LTE
 */
export type SFixed32LTE = Message<"buf.validate.conformance.cases.SFixed32LTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32LTE.
 * Use `create(SFixed32LTESchema)` to create a new message.
 */
export const SFixed32LTESchema: GenMessage<SFixed32LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 160);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32GT
 */
export type SFixed32GT = Message<"buf.validate.conformance.cases.SFixed32GT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32GT.
 * Use `create(SFixed32GTSchema)` to create a new message.
 */
export const SFixed32GTSchema: GenMessage<SFixed32GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 161);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32GTE
 */
export type SFixed32GTE = Message<"buf.validate.conformance.cases.SFixed32GTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32GTE.
 * Use `create(SFixed32GTESchema)` to create a new message.
 */
export const SFixed32GTESchema: GenMessage<SFixed32GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 162);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32GTLT
 */
export type SFixed32GTLT = Message<"buf.validate.conformance.cases.SFixed32GTLT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32GTLT.
 * Use `create(SFixed32GTLTSchema)` to create a new message.
 */
export const SFixed32GTLTSchema: GenMessage<SFixed32GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 163);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32ExLTGT
 */
export type SFixed32ExLTGT = Message<"buf.validate.conformance.cases.SFixed32ExLTGT"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32ExLTGT.
 * Use `create(SFixed32ExLTGTSchema)` to create a new message.
 */
export const SFixed32ExLTGTSchema: GenMessage<SFixed32ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 164);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32GTELTE
 */
export type SFixed32GTELTE = Message<"buf.validate.conformance.cases.SFixed32GTELTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32GTELTE.
 * Use `create(SFixed32GTELTESchema)` to create a new message.
 */
export const SFixed32GTELTESchema: GenMessage<SFixed32GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 165);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32ExGTELTE
 */
export type SFixed32ExGTELTE = Message<"buf.validate.conformance.cases.SFixed32ExGTELTE"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32ExGTELTE.
 * Use `create(SFixed32ExGTELTESchema)` to create a new message.
 */
export const SFixed32ExGTELTESchema: GenMessage<SFixed32ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 166);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32Ignore
 */
export type SFixed32Ignore = Message<"buf.validate.conformance.cases.SFixed32Ignore"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32Ignore.
 * Use `create(SFixed32IgnoreSchema)` to create a new message.
 */
export const SFixed32IgnoreSchema: GenMessage<SFixed32Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 167);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32IncorrectType
 */
export type SFixed32IncorrectType = Message<"buf.validate.conformance.cases.SFixed32IncorrectType"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32IncorrectType.
 * Use `create(SFixed32IncorrectTypeSchema)` to create a new message.
 */
export const SFixed32IncorrectTypeSchema: GenMessage<SFixed32IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 168);

/**
 * @generated from message buf.validate.conformance.cases.SFixed32Example
 */
export type SFixed32Example = Message<"buf.validate.conformance.cases.SFixed32Example"> & {
  /**
   * @generated from field: sfixed32 val = 1;
   */
  val: number;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed32Example.
 * Use `create(SFixed32ExampleSchema)` to create a new message.
 */
export const SFixed32ExampleSchema: GenMessage<SFixed32Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 169);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64None
 */
export type SFixed64None = Message<"buf.validate.conformance.cases.SFixed64None"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64None.
 * Use `create(SFixed64NoneSchema)` to create a new message.
 */
export const SFixed64NoneSchema: GenMessage<SFixed64None> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 170);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64Const
 */
export type SFixed64Const = Message<"buf.validate.conformance.cases.SFixed64Const"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64Const.
 * Use `create(SFixed64ConstSchema)` to create a new message.
 */
export const SFixed64ConstSchema: GenMessage<SFixed64Const> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 171);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64In
 */
export type SFixed64In = Message<"buf.validate.conformance.cases.SFixed64In"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64In.
 * Use `create(SFixed64InSchema)` to create a new message.
 */
export const SFixed64InSchema: GenMessage<SFixed64In> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 172);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64NotIn
 */
export type SFixed64NotIn = Message<"buf.validate.conformance.cases.SFixed64NotIn"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64NotIn.
 * Use `create(SFixed64NotInSchema)` to create a new message.
 */
export const SFixed64NotInSchema: GenMessage<SFixed64NotIn> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 173);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64LT
 */
export type SFixed64LT = Message<"buf.validate.conformance.cases.SFixed64LT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64LT.
 * Use `create(SFixed64LTSchema)` to create a new message.
 */
export const SFixed64LTSchema: GenMessage<SFixed64LT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 174);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64LTE
 */
export type SFixed64LTE = Message<"buf.validate.conformance.cases.SFixed64LTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64LTE.
 * Use `create(SFixed64LTESchema)` to create a new message.
 */
export const SFixed64LTESchema: GenMessage<SFixed64LTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 175);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64GT
 */
export type SFixed64GT = Message<"buf.validate.conformance.cases.SFixed64GT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64GT.
 * Use `create(SFixed64GTSchema)` to create a new message.
 */
export const SFixed64GTSchema: GenMessage<SFixed64GT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 176);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64GTE
 */
export type SFixed64GTE = Message<"buf.validate.conformance.cases.SFixed64GTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64GTE.
 * Use `create(SFixed64GTESchema)` to create a new message.
 */
export const SFixed64GTESchema: GenMessage<SFixed64GTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 177);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64GTLT
 */
export type SFixed64GTLT = Message<"buf.validate.conformance.cases.SFixed64GTLT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64GTLT.
 * Use `create(SFixed64GTLTSchema)` to create a new message.
 */
export const SFixed64GTLTSchema: GenMessage<SFixed64GTLT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 178);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64ExLTGT
 */
export type SFixed64ExLTGT = Message<"buf.validate.conformance.cases.SFixed64ExLTGT"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64ExLTGT.
 * Use `create(SFixed64ExLTGTSchema)` to create a new message.
 */
export const SFixed64ExLTGTSchema: GenMessage<SFixed64ExLTGT> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 179);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64GTELTE
 */
export type SFixed64GTELTE = Message<"buf.validate.conformance.cases.SFixed64GTELTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64GTELTE.
 * Use `create(SFixed64GTELTESchema)` to create a new message.
 */
export const SFixed64GTELTESchema: GenMessage<SFixed64GTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 180);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64ExGTELTE
 */
export type SFixed64ExGTELTE = Message<"buf.validate.conformance.cases.SFixed64ExGTELTE"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64ExGTELTE.
 * Use `create(SFixed64ExGTELTESchema)` to create a new message.
 */
export const SFixed64ExGTELTESchema: GenMessage<SFixed64ExGTELTE> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 181);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64Ignore
 */
export type SFixed64Ignore = Message<"buf.validate.conformance.cases.SFixed64Ignore"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64Ignore.
 * Use `create(SFixed64IgnoreSchema)` to create a new message.
 */
export const SFixed64IgnoreSchema: GenMessage<SFixed64Ignore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 182);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64IncorrectType
 */
export type SFixed64IncorrectType = Message<"buf.validate.conformance.cases.SFixed64IncorrectType"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64IncorrectType.
 * Use `create(SFixed64IncorrectTypeSchema)` to create a new message.
 */
export const SFixed64IncorrectTypeSchema: GenMessage<SFixed64IncorrectType> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 183);

/**
 * @generated from message buf.validate.conformance.cases.SFixed64Example
 */
export type SFixed64Example = Message<"buf.validate.conformance.cases.SFixed64Example"> & {
  /**
   * @generated from field: sfixed64 val = 1;
   */
  val: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.SFixed64Example.
 * Use `create(SFixed64ExampleSchema)` to create a new message.
 */
export const SFixed64ExampleSchema: GenMessage<SFixed64Example> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 184);

/**
 * @generated from message buf.validate.conformance.cases.Int64LTEOptional
 */
export type Int64LTEOptional = Message<"buf.validate.conformance.cases.Int64LTEOptional"> & {
  /**
   * @generated from field: optional int64 val = 1;
   */
  val?: bigint;
};

/**
 * Describes the message buf.validate.conformance.cases.Int64LTEOptional.
 * Use `create(Int64LTEOptionalSchema)` to create a new message.
 */
export const Int64LTEOptionalSchema: GenMessage<Int64LTEOptional> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_numbers, 185);

