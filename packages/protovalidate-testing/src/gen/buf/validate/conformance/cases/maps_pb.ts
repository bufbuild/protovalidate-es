// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.5.0 with parameter "target=ts,import_extension=.js,ts_nocheck=false"
// @generated from file buf/validate/conformance/cases/maps.proto (package buf.validate.conformance.cases, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../validate_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file buf/validate/conformance/cases/maps.proto.
 */
export const file_buf_validate_conformance_cases_maps: GenFile = /*@__PURE__*/
  fileDesc("CilidWYvdmFsaWRhdGUvY29uZm9ybWFuY2UvY2FzZXMvbWFwcy5wcm90bxIeYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzInQKB01hcE5vbmUSPQoDdmFsGAEgAygLMjAuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcE5vbmUuVmFsRW50cnkaKgoIVmFsRW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgIOgI4ASJ8CgZNYXBNaW4SRgoDdmFsGAEgAygLMi8uYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcE1pbi5WYWxFbnRyeUIIukgFmgECCAIaKgoIVmFsRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgCOgI4ASJ8CgZNYXBNYXgSRgoDdmFsGAEgAygLMi8uYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcE1heC5WYWxFbnRyeUIIukgFmgECEAMaKgoIVmFsRW50cnkSCwoDa2V5GAEgASgDEg0KBXZhbHVlGAIgASgBOgI4ASKEAQoJTWFwTWluTWF4EksKA3ZhbBgBIAMoCzIyLmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5jYXNlcy5NYXBNaW5NYXguVmFsRW50cnlCCrpIB5oBBAgCEAQaKgoIVmFsRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgIOgI4ASKCAQoITWFwRXhhY3QSSgoDdmFsGAEgAygLMjEuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcEV4YWN0LlZhbEVudHJ5Qgq6SAeaAQQIAxADGioKCFZhbEVudHJ5EgsKA2tleRgBIAEoBBINCgV2YWx1ZRgCIAEoCToCOAEiggEKB01hcEtleXMSSwoDdmFsGAEgAygLMjAuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcEtleXMuVmFsRW50cnlCDLpICZoBBiIEQgIQABoqCghWYWxFbnRyeRILCgNrZXkYASABKBISDQoFdmFsdWUYAiABKAk6AjgBIoYBCglNYXBWYWx1ZXMSTQoDdmFsGAEgAygLMjIuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcFZhbHVlcy5WYWxFbnRyeUIMukgJmgEGKgRyAhADGioKCFZhbEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEinwEKDk1hcEtleXNQYXR0ZXJuEmEKA3ZhbBgBIAMoCzI3LmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5jYXNlcy5NYXBLZXlzUGF0dGVybi5WYWxFbnRyeUIbukgYmgEVIhNyETIPKD9pKV5bYS16MC05XSskGioKCFZhbEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiowEKEE1hcFZhbHVlc1BhdHRlcm4SYwoDdmFsGAEgAygLMjkuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcFZhbHVlc1BhdHRlcm4uVmFsRW50cnlCG7pIGJoBFSoTchEyDyg/aSleW2EtejAtOV0rJBoqCghWYWxFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIs0BCgxNYXBSZWN1cnNpdmUSQgoDdmFsGAEgAygLMjUuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcFJlY3Vyc2l2ZS5WYWxFbnRyeRpcCghWYWxFbnRyeRILCgNrZXkYASABKA0SPwoFdmFsdWUYAiABKAsyMC5idWYudmFsaWRhdGUuY29uZm9ybWFuY2UuY2FzZXMuTWFwUmVjdXJzaXZlLk1zZzoCOAEaGwoDTXNnEhQKA3ZhbBgBIAEoCUIHukgEcgIQAyKRAQoOTWFwRXhhY3RJZ25vcmUSUwoDdmFsGAEgAygLMjcuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmNhc2VzLk1hcEV4YWN0SWdub3JlLlZhbEVudHJ5Qg26SArYAQGaAQQIAxADGioKCFZhbEVudHJ5EgsKA2tleRgBIAEoBBINCgV2YWx1ZRgCIAEoCToCOAEinQMKDE11bHRpcGxlTWFwcxJUCgVmaXJzdBgBIAMoCzI3LmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5jYXNlcy5NdWx0aXBsZU1hcHMuRmlyc3RFbnRyeUIMukgJmgEGIgQqAiAAElYKBnNlY29uZBgCIAMoCzI4LmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5jYXNlcy5NdWx0aXBsZU1hcHMuU2Vjb25kRW50cnlCDLpICZoBBiIEGgIQABJUCgV0aGlyZBgDIAMoCzI3LmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5jYXNlcy5NdWx0aXBsZU1hcHMuVGhpcmRFbnRyeUIMukgJmgEGIgQaAiAAGiwKCkZpcnN0RW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgJOgI4ARotCgtTZWNvbmRFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAg6AjgBGiwKClRoaXJkRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgIOgI4AWIGcHJvdG8z", [file_buf_validate_validate]);

/**
 * @generated from message buf.validate.conformance.cases.MapNone
 */
export type MapNone = Message<"buf.validate.conformance.cases.MapNone"> & {
  /**
   * @generated from field: map<uint32, bool> val = 1;
   */
  val: { [key: number]: boolean };
};

/**
 * Describes the message buf.validate.conformance.cases.MapNone.
 * Use `create(MapNoneSchema)` to create a new message.
 */
export const MapNoneSchema: GenMessage<MapNone> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 0);

/**
 * @generated from message buf.validate.conformance.cases.MapMin
 */
export type MapMin = Message<"buf.validate.conformance.cases.MapMin"> & {
  /**
   * @generated from field: map<int32, float> val = 1;
   */
  val: { [key: number]: number };
};

/**
 * Describes the message buf.validate.conformance.cases.MapMin.
 * Use `create(MapMinSchema)` to create a new message.
 */
export const MapMinSchema: GenMessage<MapMin> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 1);

/**
 * @generated from message buf.validate.conformance.cases.MapMax
 */
export type MapMax = Message<"buf.validate.conformance.cases.MapMax"> & {
  /**
   * @generated from field: map<int64, double> val = 1;
   */
  val: { [key: string]: number };
};

/**
 * Describes the message buf.validate.conformance.cases.MapMax.
 * Use `create(MapMaxSchema)` to create a new message.
 */
export const MapMaxSchema: GenMessage<MapMax> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 2);

/**
 * @generated from message buf.validate.conformance.cases.MapMinMax
 */
export type MapMinMax = Message<"buf.validate.conformance.cases.MapMinMax"> & {
  /**
   * @generated from field: map<string, bool> val = 1;
   */
  val: { [key: string]: boolean };
};

/**
 * Describes the message buf.validate.conformance.cases.MapMinMax.
 * Use `create(MapMinMaxSchema)` to create a new message.
 */
export const MapMinMaxSchema: GenMessage<MapMinMax> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 3);

/**
 * @generated from message buf.validate.conformance.cases.MapExact
 */
export type MapExact = Message<"buf.validate.conformance.cases.MapExact"> & {
  /**
   * @generated from field: map<uint64, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapExact.
 * Use `create(MapExactSchema)` to create a new message.
 */
export const MapExactSchema: GenMessage<MapExact> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 4);

/**
 * @generated from message buf.validate.conformance.cases.MapKeys
 */
export type MapKeys = Message<"buf.validate.conformance.cases.MapKeys"> & {
  /**
   * @generated from field: map<sint64, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapKeys.
 * Use `create(MapKeysSchema)` to create a new message.
 */
export const MapKeysSchema: GenMessage<MapKeys> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 5);

/**
 * @generated from message buf.validate.conformance.cases.MapValues
 */
export type MapValues = Message<"buf.validate.conformance.cases.MapValues"> & {
  /**
   * @generated from field: map<string, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapValues.
 * Use `create(MapValuesSchema)` to create a new message.
 */
export const MapValuesSchema: GenMessage<MapValues> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 6);

/**
 * @generated from message buf.validate.conformance.cases.MapKeysPattern
 */
export type MapKeysPattern = Message<"buf.validate.conformance.cases.MapKeysPattern"> & {
  /**
   * @generated from field: map<string, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapKeysPattern.
 * Use `create(MapKeysPatternSchema)` to create a new message.
 */
export const MapKeysPatternSchema: GenMessage<MapKeysPattern> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 7);

/**
 * @generated from message buf.validate.conformance.cases.MapValuesPattern
 */
export type MapValuesPattern = Message<"buf.validate.conformance.cases.MapValuesPattern"> & {
  /**
   * @generated from field: map<string, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapValuesPattern.
 * Use `create(MapValuesPatternSchema)` to create a new message.
 */
export const MapValuesPatternSchema: GenMessage<MapValuesPattern> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 8);

/**
 * @generated from message buf.validate.conformance.cases.MapRecursive
 */
export type MapRecursive = Message<"buf.validate.conformance.cases.MapRecursive"> & {
  /**
   * @generated from field: map<uint32, buf.validate.conformance.cases.MapRecursive.Msg> val = 1;
   */
  val: { [key: number]: MapRecursive_Msg };
};

/**
 * Describes the message buf.validate.conformance.cases.MapRecursive.
 * Use `create(MapRecursiveSchema)` to create a new message.
 */
export const MapRecursiveSchema: GenMessage<MapRecursive> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 9);

/**
 * @generated from message buf.validate.conformance.cases.MapRecursive.Msg
 */
export type MapRecursive_Msg = Message<"buf.validate.conformance.cases.MapRecursive.Msg"> & {
  /**
   * @generated from field: string val = 1;
   */
  val: string;
};

/**
 * Describes the message buf.validate.conformance.cases.MapRecursive.Msg.
 * Use `create(MapRecursive_MsgSchema)` to create a new message.
 */
export const MapRecursive_MsgSchema: GenMessage<MapRecursive_Msg> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 9, 0);

/**
 * @generated from message buf.validate.conformance.cases.MapExactIgnore
 */
export type MapExactIgnore = Message<"buf.validate.conformance.cases.MapExactIgnore"> & {
  /**
   * @generated from field: map<uint64, string> val = 1;
   */
  val: { [key: string]: string };
};

/**
 * Describes the message buf.validate.conformance.cases.MapExactIgnore.
 * Use `create(MapExactIgnoreSchema)` to create a new message.
 */
export const MapExactIgnoreSchema: GenMessage<MapExactIgnore> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 10);

/**
 * @generated from message buf.validate.conformance.cases.MultipleMaps
 */
export type MultipleMaps = Message<"buf.validate.conformance.cases.MultipleMaps"> & {
  /**
   * @generated from field: map<uint32, string> first = 1;
   */
  first: { [key: number]: string };

  /**
   * @generated from field: map<int32, bool> second = 2;
   */
  second: { [key: number]: boolean };

  /**
   * @generated from field: map<int32, bool> third = 3;
   */
  third: { [key: number]: boolean };
};

/**
 * Describes the message buf.validate.conformance.cases.MultipleMaps.
 * Use `create(MultipleMapsSchema)` to create a new message.
 */
export const MultipleMapsSchema: GenMessage<MultipleMaps> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_cases_maps, 11);

