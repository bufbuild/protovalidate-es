// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.3.0 with parameter "target=ts,import_extension=.js,ts_nocheck=false"
// @generated from file buf/validate/conformance/harness/harness.proto (package buf.validate.conformance.harness, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Violations } from "../../validate_pb.js";
import { file_buf_validate_validate } from "../../validate_pb.js";
import type { Any, FileDescriptorSet } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file buf/validate/conformance/harness/harness.proto.
 */
export const file_buf_validate_conformance_harness_harness: GenFile = /*@__PURE__*/
  fileDesc("Ci5idWYvdmFsaWRhdGUvY29uZm9ybWFuY2UvaGFybmVzcy9oYXJuZXNzLnByb3RvEiBidWYudmFsaWRhdGUuY29uZm9ybWFuY2UuaGFybmVzcyLjAQoWVGVzdENvbmZvcm1hbmNlUmVxdWVzdBIxCgVmZHNldBgCIAEoCzIiLmdvb2dsZS5wcm90b2J1Zi5GaWxlRGVzY3JpcHRvclNldBJSCgVjYXNlcxgDIAMoCzJDLmJ1Zi52YWxpZGF0ZS5jb25mb3JtYW5jZS5oYXJuZXNzLlRlc3RDb25mb3JtYW5jZVJlcXVlc3QuQ2FzZXNFbnRyeRpCCgpDYXNlc0VudHJ5EgsKA2tleRgBIAEoCRIjCgV2YWx1ZRgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5Bbnk6AjgBItABChdUZXN0Q29uZm9ybWFuY2VSZXNwb25zZRJXCgdyZXN1bHRzGAEgAygLMkYuYnVmLnZhbGlkYXRlLmNvbmZvcm1hbmNlLmhhcm5lc3MuVGVzdENvbmZvcm1hbmNlUmVzcG9uc2UuUmVzdWx0c0VudHJ5GlwKDFJlc3VsdHNFbnRyeRILCgNrZXkYASABKAkSOwoFdmFsdWUYAiABKAsyLC5idWYudmFsaWRhdGUuY29uZm9ybWFuY2UuaGFybmVzcy5UZXN0UmVzdWx0OgI4ASKxAQoKVGVzdFJlc3VsdBIRCgdzdWNjZXNzGAEgASgISAASNAoQdmFsaWRhdGlvbl9lcnJvchgCIAEoCzIYLmJ1Zi52YWxpZGF0ZS5WaW9sYXRpb25zSAASGwoRY29tcGlsYXRpb25fZXJyb3IYAyABKAlIABIXCg1ydW50aW1lX2Vycm9yGAQgASgJSAASGgoQdW5leHBlY3RlZF9lcnJvchgFIAEoCUgAQggKBnJlc3VsdGIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_any, file_google_protobuf_descriptor]);

/**
 * TestConformanceRequest is the request for Conformance Tests.
 * The FileDescriptorSet is the FileDescriptorSet to test against.
 * The cases map is a map of case name to the Any message that represents the case.
 *
 * @generated from message buf.validate.conformance.harness.TestConformanceRequest
 */
export type TestConformanceRequest = Message<"buf.validate.conformance.harness.TestConformanceRequest"> & {
  /**
   * @generated from field: google.protobuf.FileDescriptorSet fdset = 2;
   */
  fdset?: FileDescriptorSet;

  /**
   * @generated from field: map<string, google.protobuf.Any> cases = 3;
   */
  cases: { [key: string]: Any };
};

/**
 * Describes the message buf.validate.conformance.harness.TestConformanceRequest.
 * Use `create(TestConformanceRequestSchema)` to create a new message.
 */
export const TestConformanceRequestSchema: GenMessage<TestConformanceRequest> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_harness_harness, 0);

/**
 * TestConformanceResponse is the response for Conformance Tests.
 * The results map is a map of case name to the TestResult.
 *
 * @generated from message buf.validate.conformance.harness.TestConformanceResponse
 */
export type TestConformanceResponse = Message<"buf.validate.conformance.harness.TestConformanceResponse"> & {
  /**
   * @generated from field: map<string, buf.validate.conformance.harness.TestResult> results = 1;
   */
  results: { [key: string]: TestResult };
};

/**
 * Describes the message buf.validate.conformance.harness.TestConformanceResponse.
 * Use `create(TestConformanceResponseSchema)` to create a new message.
 */
export const TestConformanceResponseSchema: GenMessage<TestConformanceResponse> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_harness_harness, 1);

/**
 * TestResult is the result of a single test. Only one of the fields will be set.
 *
 * @generated from message buf.validate.conformance.harness.TestResult
 */
export type TestResult = Message<"buf.validate.conformance.harness.TestResult"> & {
  /**
   * @generated from oneof buf.validate.conformance.harness.TestResult.result
   */
  result: {
    /**
     * success is true if the test succeeded.
     *
     * @generated from field: bool success = 1;
     */
    value: boolean;
    case: "success";
  } | {
    /**
     * validation_error is the error if the test failed due to validation errors.
     *
     * @generated from field: buf.validate.Violations validation_error = 2;
     */
    value: Violations;
    case: "validationError";
  } | {
    /**
     * compilation_error is the error if the test failed due to compilation errors.
     *
     * @generated from field: string compilation_error = 3;
     */
    value: string;
    case: "compilationError";
  } | {
    /**
     * runtime_error is the error if the test failed due to runtime errors.
     *
     * @generated from field: string runtime_error = 4;
     */
    value: string;
    case: "runtimeError";
  } | {
    /**
     * unexpected_error is any other error that may have occurred.
     *
     * @generated from field: string unexpected_error = 5;
     */
    value: string;
    case: "unexpectedError";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message buf.validate.conformance.harness.TestResult.
 * Use `create(TestResultSchema)` to create a new message.
 */
export const TestResultSchema: GenMessage<TestResult> = /*@__PURE__*/
  messageDesc(file_buf_validate_conformance_harness_harness, 2);

