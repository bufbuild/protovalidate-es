// Copyright 2024-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.4.0 with parameter "target=ts,valid_types=protovalidate_required+legacy_required"
// @generated from file store/v1/order.proto (package banking.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file store/v1/order.proto.
 */
export const file_store_v1_order: GenFile = /*@__PURE__*/
  fileDesc("ChRzdG9yZS92MS9vcmRlci5wcm90bxIKYmFua2luZy52MSI7CgVPcmRlchIKCgJpZBgBIAEoCRImCgR1c2VyGAIgASgLMhAuYmFua2luZy52MS5Vc2VyQga6SAPIAQEiFAoEVXNlchIMCgRuYW1lGAEgASgJYgZwcm90bzM", [file_buf_validate_validate]);

/**
 * @generated from message banking.v1.Order
 */
export type Order = Message<"banking.v1.Order"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * This field is required through the protovalidate rule `required`.
   *
   * With the plugin option `valid_types=protovalidate_required`, protoc-gen-es
   * generates a Valid type that respects the rule. The Validator result uses
   * this type if available.
   *
   * With the plugin option `valid_types=legacy_required`, the proto2 `required`
   * label is supported. You have to provide the option legacyRequired: true
   * to createValidator().
   *
   * @generated from field: banking.v1.User user = 2;
   */
  user?: User;
};

/**
 * @generated from message banking.v1.Order
 */
export type OrderValid = Message<"banking.v1.Order"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * This field is required through the protovalidate rule `required`.
   *
   * With the plugin option `valid_types=protovalidate_required`, protoc-gen-es
   * generates a Valid type that respects the rule. The Validator result uses
   * this type if available.
   *
   * With the plugin option `valid_types=legacy_required`, the proto2 `required`
   * label is supported. You have to provide the option legacyRequired: true
   * to createValidator().
   *
   * @generated from field: banking.v1.User user = 2;
   */
  user: UserValid;
};

/**
 * Describes the message banking.v1.Order.
 * Use `create(OrderSchema)` to create a new message.
 */
export const OrderSchema: GenMessage<Order, {validType: OrderValid}> = /*@__PURE__*/
  messageDesc(file_store_v1_order, 0);

/**
 * @generated from message banking.v1.User
 */
export type User = Message<"banking.v1.User"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

export type UserValid = User;

/**
 * Describes the message banking.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User, {validType: UserValid}> = /*@__PURE__*/
  messageDesc(file_store_v1_order, 1);

